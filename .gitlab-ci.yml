stages:
  - build
  - deploy

build_dev:
  stage: build
  image: alpine:latest
  only:
    - dev
  before_script:
    - apk add --no-cache openssh git
    - echo "$SSH_PRIVATE_KEY" > id_rsa
    - chmod 600 id_rsa
    - export IMAGE_TAG=cais-dev.${CI_PIPELINE_IID}
    - echo "IMAGE_TAG=cais-dev.${CI_PIPELINE_IID}"
  script:
    - ssh -o StrictHostKeyChecking=no -i id_rsa $SSH_USER@$SSH_HOST '
        cd /home/data/development/cais &&
        git config --global --add safe.directory /home/data/development/cais &&
        git pull origin dev &&
        docker compose build
      '

deploy_dev:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh git
    - echo "$SSH_PRIVATE_KEY" > id_rsa
    - chmod 600 id_rsa
  variables:
    IMAGE_TAG: "cais-dev.${CI_PIPELINE_IID}"
  script:
    - ssh -o StrictHostKeyChecking=no -i id_rsa $SSH_USER@$SSH_HOST '
        cd /home/data/development/cais &&
        docker compose down &&
        docker compose up -d
      '
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
    - when: never

deploy_prod:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh git
    - echo "$SSH_PRIVATE_KEY" > id_rsa
    - chmod 600 id_rsa
  script:
    - ssh -o StrictHostKeyChecking=no -i id_rsa $SSH_USER@$SSH_HOST '
        cd /home/data/project/cais &&
        git config --global --add safe.directory /home/data/project/cais &&
        git pull origin prod &&
        docker compose build &&
        docker compose down &&
        docker compose up -d
      '
  rules:
    - if: '$CI_COMMIT_BRANCH == "prod"'
      when: manual  # Manual deploy saat prod
    - when: never